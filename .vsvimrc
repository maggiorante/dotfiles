set scrolloff=10
set linenumber
set showmode
set showcmd
set visualbell
set ignorecase
set smartcase
set hlsearch
set incsearch
set number
set autoindent
set tabstop=4
set shiftwidth=4
set expandtab
set clipboard=unnamed
set ttimeout
set ttimeoutlen=50

" Set the leader key
let mapleader = " "

" Remap jk to Esc
inoremap jk <Esc>

" Unbinds the Space key as it's used as the leader key
nnoremap <Space> <NOP>

" Esc removes search highlights
nnoremap <Esc> :nohl<CR>

" `<Alt> + j` - Navigate to the next tab
" `<Alt> + k` - Navigate to the previous tab
nnoremap <a-k> :tabnext<CR>
nnoremap <a-j> :tabprev<CR>

" `]` - Navigate to the next member / type / tag
" `[` - Navigate to the previous member / type / tag
nnoremap [ <Action>(MethodUp)
nnoremap ] <Action>(MethodDown)

map <leader>/ <Action>(CommentByLineComment)
map <leader>rs <Action>(ReformatCode)

map <leader>rc :action CollapseAllRegions<CR>
map <leader>re :action ExpandAllRegions<CR>

map g// <Action>(SearchEverywhere)

map cd <Action>(RenameElement)

" Go to code
nmap gd <Action>(GotoDeclaration)
nmap gD <Action>(GotoTypeDeclaration)
nmap gi <Action>(GotoImplementation)
nmap gA <Action>(ShowUsages)
nmap <c-h> <Action>(Back)
nmap <c-l> <Action>(Forward)

" Errors
map ge <Action>(ReSharperGotoNextErrorInSolution)
map gE <Action>(ReSharperGotoPrevErrorInSolution)

" Debug
map <leader>sd <Action>(Debug)
